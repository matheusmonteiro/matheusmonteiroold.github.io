/*
* Simple Boilerplate
* https://github.com/mjnr/Simple-Boilerplate
* -----------------------------------
* Author: Milson JÃºnior
* URL: https://github.com/mjnr
* -----------------------------------
* Project Name
* -----------------------------------
*/
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
  text-decoration: none;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
ul,
ol,
dl {
  margin: 0;
  padding: 0;
}
li {
  list-style: none;
}
hr {
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  -moz-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
*,
*:before,
*:after {
  box-sizing: border-box;
}
html,
body {
  -moz-osx-font-smoothing: grayscale;
  color: #777;
  font-family: Montserrat;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  color: #555;
}
a {
  color: #999;
}
img {
  max-width: 100%;
}
.my-component {
  text-align: center !important;
}
body.home {
  background-image: url("/assets/images/home.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  height: 100vh;
  background-position: bottom right;
}
@media only screen and (min-width: 920px) {
  body.home {
    background-image: url("/assets/images/paulista-desk.jpg");
  }
}
body.home header {
  display: none;
}
body.home .container {
  max-width: none;
}
body.home .logo {
  margin-top: 10px;
  margin-left: -10px;
}
body.home span.edition {
  color: #fff;
  text-align: right;
  display: inline-block;
  width: 100%;
  transform: translateY(-20px);
  font-weight: lighter;
  font-size: calc(12px + 1 * ((100vw - 320px) / 680));
}
body.home span.date {
  color: #fff;
  font-weight: lighter;
  text-align: left;
  position: absolute;
  bottom: 100px;
  margin-left: -10px;
  width: 100%;
  left: 30px;
  font-size: calc(12px + 1 * ((100vw - 320px) / 680));
}
@media only screen and (min-width: 920px) {
  body.home span.date {
    left: auto;
    width: auto;
  }
}
body.home h2 {
  color: #fff;
  font-family: Merriweather;
  font-size: calc(13px + 3 * ((100vw - 320px) / 680));
  font-weight: lighter;
  max-width: 65%;
  line-height: 26px;
  position: absolute;
  top: 15%;
  margin-left: -10px;
}
@media only screen and (min-width: 920px) {
  body.home h2 {
    max-width: 20%;
    line-height: 180%;
    bottom: 30%;
    top: auto;
  }
}
body.home h1 {
  text-transform: uppercase;
  color: #fff;
  font-weight: bolder;
  transform: rotate(-90deg);
  transform-origin: bottom right;
  font-size: calc(40px + 15 * ((100vw - 320px) / 680));
  letter-spacing: 22px;
  position: absolute;
  right: 0;
  margin: 0;
  margin-top: -64px;
  top: calc(50% - 27vh);
  margin-right: 4.5%;
}
@media only screen and (min-width: 920px) {
  body.home h1 {
    letter-spacing: 40px;
    margin-top: -150px;
  }
}
body.home h1:before {
  display: block;
  content: "AVENIDA";
  font-size: 20px;
  opacity: 0.3;
  letter-spacing: 10px;
  text-align: right;
  padding-right: 20px;
}
body.home .titleImage {
  position: absolute;
  width: 80%;
  height: 85vh;
  left: 12%;
  top: 7.5%;
  margin: 0;
}
body.home .leia {
  color: #fff;
  position: absolute;
  bottom: 0;
  text-align: center;
  font-weight: bold;
  text-transform: uppercase;
  bottom: 0px;
  width: 100%;
  left: 0;
  padding-top: 100px;
  padding-bottom: 20px;
  background-image: linear-gradient(-180deg, rgba(37,37,37,0) 0, #272623 100%);
}
body.home .leia span {
  font-weight: lighter;
  font-size: 25px;
  padding-left: 10px;
}
body.indice {
  background-color: #fff;
}
body.indice .container.indice {
  max-width: none;
  width: 100%;
  text-align: center;
}
.highlight {
  background-color: #282933;
  color: #fff;
  font-size: 100px;
  padding-top: 100px;
  padding-bottom: 20px;
}
.highlight img {
  max-height: 50vh;
  box-shadow: 0 2px 38px 0 rgba(0,0,0,0.5);
}
.highlight h2 {
  color: #fff;
  font-size: 30px;
  letter-spacing: 17px;
  text-align: left;
}
@media only screen and (min-width: 920px) {
  .highlight h2 {
    font-size: 35px;
    margin-top: 0;
  }
}
.highlight p {
  font-size: 13px;
  color: #7f7d7d;
  text-align: left;
  font-family: Merriweather;
  font-weight: lighter;
  line-height: 26px;
}
@media only screen and (min-width: 920px) {
  .highlight p {
    font-size: 16px;
    line-height: 40px;
    max-width: 60%;
  }
}
.highlight .read {
  font-size: 12px;
  vertical-align: top;
  text-align: left;
  display: block;
  color: #fff;
  padding-bottom: 50px;
  margin-top: 30px;
}
@media only screen and (min-width: 920px) {
  .highlight .read {
    font-size: 16px;
    margin-top: 40px;
  }
}
@media only screen and (max-width: 920px) {
  .highlight .col-6 {
    width: 100%;
  }
}
.list-posts {
  margin: 50px auto;
  text-align: left;
}
.list-posts .singles-post {
  display: inline-block;
}
@media only screen and (min-width: 450px) {
  .list-posts .singles-post {
    width: 400px;
    display: inline-block;
    vertical-align: top;
  }
}
.list-posts .postImage {
  border-radius: 6px;
  padding: 20px;
}
.list-posts .postImage img {
  box-shadow: 3px 17px 38px 0 rgba(0,0,0,0.3);
}
.list-posts .postData {
  padding-left: 30px;
  padding-right: 30px;
}
.list-posts .postData h4 {
  font-size: 24px;
  font-weight: 400;
  margin: 0 0 10px 0;
}
.list-posts .postData p {
  font-size: 13px;
  color: #7f7d7d;
  text-align: left;
  font-family: Merriweather;
  font-weight: lighter;
  line-height: 26px;
}
.list-posts .postData .read {
  font-size: 14px;
}
header {
  overflow-x: scroll;
  -webkit-overflow-scrolling: touch;
  padding: 15px 0;
  background-color: #282933;
  position: fixed;
  top: 0;
  box-shadow: 0 2px 17px 0 rgba(0,0,0,0.5);
  z-index: 100;
  width: 100%;
}
.menu {
  min-width: 1000px;
  color: #fff;
  width: 100%;
  font-family: Montserrat;
  font-weight: 100;
}
.menu li {
  vertical-align: middle;
  display: inline-block;
  padding: 0 25px;
}
.menu li.logo img {
  transform: translateY(5px);
}
.menu li:first-child {
  padding-right: 20%;
  font-size: 20px;
}
@media only screen and (min-width: 1024px) {
  .menu li {
    padding: 0 4%;
    font-size: 14px;
  }
}
body {
  background: #393939;
  background-repeat: no-repeat;
  padding-top: 30px;
}
body:before {
  display: block;
  content: "";
  width: 100%;
  height: 96vh;
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
}
@media only screen and (min-width: 920px) {
  body:before {
    height: 85vh;
    background-size: cover;
    opacity: 0.5;
  }
}
body.fiesp:before {
  background: url("/assets/images/fiesp.jpg");
}
@media only screen and (min-width: 920px) {
  body.fiesp:before {
    background: url("/assets/images/fiesp-desk.jpg");
    background-size: cover;
  }
}
body.sesc:before {
  background: url("/assets/images/sesc.jpg");
}
@media only screen and (min-width: 920px) {
  body.sesc:before {
    background: url("/assets/images/sesc-desk.jpg");
    background-size: cover;
  }
}
body.japanHouse:before {
  background: url("/assets/images/japan.jpg");
}
@media only screen and (min-width: 920px) {
  body.japanHouse:before {
    background: url("/assets/images/japan.jpg");
    background-size: cover;
  }
}
body.IMS:before {
  background: url("/assets/images/ims.jpg");
}
@media only screen and (min-width: 920px) {
  body.IMS:before {
    background: url("/assets/images/ims-desktop.jpg");
    background-size: cover;
  }
}
body.copersucar:before {
  background: url("/assets/images/copersucar.jpg");
}
@media only screen and (min-width: 920px) {
  body.copersucar:before {
    background: url("/assets/images/ims-desktop.jpg");
    background-size: cover;
  }
}
.titleHolder {
  border: 1px solid rgba(255,255,255,0.5);
  padding: 40px 20px 80px 20px;
  margin-top: 130px;
  position: relative;
  margin-bottom: 15vh;
}
@media only screen and (min-width: 920px) {
  .titleHolder {
    margin-bottom: 20vh;
    padding: 100px 70px;
  }
}
.titleHolder h1 {
  color: #fff;
  font-size: 30px;
  line-height: 46px;
  font-weight: 400;
  font-family: Montserrat;
  margin: 0;
}
@media only screen and (min-width: 920px) {
  .titleHolder h1 {
    font-size: 60px;
    line-height: 100px;
    max-width: 60%;
  }
}
.titleHolder .date {
  color: #fff;
  font-weight: 100;
  font-size: 12px;
  position: absolute;
  bottom: -30px;
  right: 0;
}
.content-section.post {
  background-color: #fff;
  width: calc(100% - 25px);
  margin-left: 25px;
  font-family: Merriweather;
  line-height: 35px;
  font-size: 14px;
  color: #4a4a4a;
  font-weight: 100;
  padding: 60px 10px 60px 20px;
}
@media only screen and (min-width: 1024px) {
  .content-section.post {
    font-size: 16px;
    line-height: 46px;
    width: calc(100% - 150px);
    margin-left: 150px;
  }
}
.content-section.post .container {
  max-width: 650px;
}
.content-section.post .sub {
  font-family: Montserrat;
  font-size: 18px;
  line-height: 30px;
  margin-bottom: 70px;
}
@media only screen and (min-width: 920px) {
  .content-section.post .sub {
    font-size: 25px;
    line-height: 45px;
  }
}
.content-section.post p.cap::first-letter {
  font-size: 300%;
}
.content-section.post p.text {
  margin-bottom: 50px;
}
.content-section.post .post-image {
  margin: 0 auto 20px -60px;
  box-shadow: 7px 9px 20px 0 rgba(82,82,82,0.251);
  max-height: 500px;
  max-width: 120%;
}
.author {
  transform: translateY(40px) translateX(50px);
}
@media only screen and (max-width: 500px) {
  .author {
    max-width: 70%;
  }
}
@media only screen and (min-width: 920px) {
  .author {
    transform: translateY(50px);
  }
}
.author .container {
  width: 100%;
  max-width: 650px;
}
@media only screen and (min-width: 920px) {
  .author .container {
    max-width: 1000px;
  }
}
.author .profilePic {
  display: inline-block;
  width: 80px;
  height: 80px;
  border: 2px solid #fff;
  border-radius: 100%;
  padding: 8px;
}
@media only screen and (min-width: 920px) {
  .author .profilePic {
    width: 100px;
    height: 100px;
  }
}
.author .name {
  display: inline-block;
  color: #fff;
  vertical-align: top;
  margin-top: 12px;
  margin-left: 20px;
  transform: translateY(-10px);
}
.author .name:before {
  display: block;
  content: "Por";
}
.container {
  margin: 0 auto;
  max-width: 1280px;
  width: 85%;
}
.row:before {
  content: '';
  display: table;
}
.row:after {
  content: '';
  display: table;
  clear: both;
}
.col-1 {
  width: calc(99.9% * 1/12 - (30px - 30px * 1/12));
}
.col-1:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-1:last-child {
  margin-right: 0;
}
.col-1:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-1:nth-child(12n + 1) {
  clear: both;
}
.col-2 {
  width: calc(99.9% * 2/12 - (30px - 30px * 2/12));
}
.col-2:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-2:last-child {
  margin-right: 0;
}
.col-2:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-2:nth-child(12n + 1) {
  clear: both;
}
.col-3 {
  width: calc(99.9% * 3/12 - (30px - 30px * 3/12));
}
.col-3:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-3:last-child {
  margin-right: 0;
}
.col-3:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-3:nth-child(12n + 1) {
  clear: both;
}
.col-4 {
  width: calc(99.9% * 4/12 - (30px - 30px * 4/12));
}
.col-4:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-4:last-child {
  margin-right: 0;
}
.col-4:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-4:nth-child(12n + 1) {
  clear: both;
}
.col-5 {
  width: calc(99.9% * 5/12 - (30px - 30px * 5/12));
}
.col-5:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-5:last-child {
  margin-right: 0;
}
.col-5:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-5:nth-child(12n + 1) {
  clear: both;
}
.col-6 {
  width: calc(99.9% * 6/12 - (30px - 30px * 6/12));
}
.col-6:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-6:last-child {
  margin-right: 0;
}
.col-6:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-6:nth-child(12n + 1) {
  clear: both;
}
.col-7 {
  width: calc(99.9% * 7/12 - (30px - 30px * 7/12));
}
.col-7:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-7:last-child {
  margin-right: 0;
}
.col-7:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-7:nth-child(12n + 1) {
  clear: both;
}
.col-8 {
  width: calc(99.9% * 8/12 - (30px - 30px * 8/12));
}
.col-8:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-8:last-child {
  margin-right: 0;
}
.col-8:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-8:nth-child(12n + 1) {
  clear: both;
}
.col-9 {
  width: calc(99.9% * 9/12 - (30px - 30px * 9/12));
}
.col-9:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-9:last-child {
  margin-right: 0;
}
.col-9:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-9:nth-child(12n + 1) {
  clear: both;
}
.col-10 {
  width: calc(99.9% * 10/12 - (30px - 30px * 10/12));
}
.col-10:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-10:last-child {
  margin-right: 0;
}
.col-10:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-10:nth-child(12n + 1) {
  clear: both;
}
.col-11 {
  width: calc(99.9% * 11/12 - (30px - 30px * 11/12));
}
.col-11:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-11:last-child {
  margin-right: 0;
}
.col-11:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-11:nth-child(12n + 1) {
  clear: both;
}
.col-12 {
  width: calc(99.9% * 12/12 - (30px - 30px * 12/12));
}
.col-12:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-12:last-child {
  margin-right: 0;
}
.col-12:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-12:nth-child(12n + 1) {
  clear: both;
}
/*# sourceMappingURL=data:application/json;base64, */