/*
* Simple Boilerplate
* https://github.com/mjnr/Simple-Boilerplate
* -----------------------------------
* Author: Milson JÃºnior
* URL: https://github.com/mjnr
* -----------------------------------
* Project Name
* -----------------------------------
*/
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background: transparent;
  text-decoration: none;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
ul,
ol,
dl {
  margin: 0;
  padding: 0;
}
li {
  list-style: none;
}
hr {
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  -moz-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
*,
*:before,
*:after {
  box-sizing: border-box;
}
html,
body {
  -moz-osx-font-smoothing: grayscale;
  color: #777;
  font-family: Montserrat;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  color: #555;
}
a {
  color: #999;
}
img {
  max-width: 100%;
}
.my-component {
  text-align: center !important;
}
body.home {
  background-image: url("/assets/images/home.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  height: 100vh;
  background-position: bottom right;
}
@media only screen and (min-width: 920px) {
  body.home {
    background-image: url("/assets/images/paulista-desk.jpg");
  }
}
body.home header {
  display: none;
}
body.home .container {
  max-width: none;
}
body.home .logo {
  margin-top: 10px;
  margin-left: -10px;
}
body.home span.edition {
  color: #fff;
  text-align: right;
  display: inline-block;
  width: 100%;
  transform: translateY(-20px);
  font-weight: lighter;
  font-size: calc(12px + 1 * ((100vw - 320px) / 680));
}
body.home span.date {
  color: #fff;
  font-weight: lighter;
  text-align: left;
  position: absolute;
  bottom: 100px;
  margin-left: -10px;
  width: 100%;
  left: 30px;
  font-size: calc(12px + 1 * ((100vw - 320px) / 680));
}
@media only screen and (min-width: 920px) {
  body.home span.date {
    left: auto;
    width: auto;
  }
}
body.home h2 {
  color: #fff;
  font-family: Merriweather;
  font-size: calc(13px + 3 * ((100vw - 320px) / 680));
  font-weight: lighter;
  max-width: 65%;
  line-height: 26px;
  position: absolute;
  top: 15%;
  margin-left: -10px;
}
@media only screen and (min-width: 920px) {
  body.home h2 {
    max-width: 20%;
    line-height: 180%;
    bottom: 30%;
    top: auto;
  }
}
body.home h1 {
  text-transform: uppercase;
  color: #fff;
  font-weight: bolder;
  transform: rotate(-90deg);
  transform-origin: bottom right;
  font-size: calc(40px + 15 * ((100vw - 320px) / 680));
  letter-spacing: 22px;
  position: absolute;
  right: 0;
  margin: 0;
  margin-top: -64px;
  top: calc(50% - 27vh);
  margin-right: 4.5%;
}
@media only screen and (min-width: 920px) {
  body.home h1 {
    letter-spacing: 40px;
    margin-top: -150px;
  }
}
body.home h1:before {
  display: block;
  content: "AVENIDA";
  font-size: 20px;
  opacity: 0.3;
  letter-spacing: 10px;
  text-align: right;
  padding-right: 20px;
}
body.home .titleImage {
  position: absolute;
  width: 80%;
  height: 85vh;
  left: 12%;
  top: 7.5%;
  margin: 0;
}
body.home .leia {
  color: #fff;
  position: absolute;
  bottom: 0;
  text-align: center;
  font-weight: bold;
  text-transform: uppercase;
  bottom: 0px;
  width: 100%;
  left: 0;
  padding-top: 100px;
  padding-bottom: 20px;
  background-image: linear-gradient(-180deg, rgba(37,37,37,0) 0, #272623 100%);
}
body.home .leia span {
  font-weight: lighter;
  font-size: 25px;
  padding-left: 10px;
}
header {
  overflow-x: scroll;
  -webkit-overflow-scrolling: touch;
  padding: 15px 0;
  background-color: #282933;
  position: fixed;
  top: 0;
  box-shadow: 0 2px 17px 0 rgba(0,0,0,0.5);
  z-index: 100;
  width: 100%;
}
.menu {
  min-width: 1000px;
  color: #fff;
  width: 100%;
  font-family: Montserrat;
  font-weight: 100;
}
.menu li {
  vertical-align: middle;
  display: inline-block;
  padding: 0 25px;
}
.menu li.logo img {
  transform: translateY(5px);
}
.menu li:first-child {
  padding-right: 20%;
  font-size: 20px;
}
@media only screen and (min-width: 1024px) {
  .menu li {
    padding: 0 4%;
    font-size: 14px;
  }
}
body {
  background: #393939;
  background-repeat: no-repeat;
  padding-top: 30px;
}
body:before {
  display: block;
  content: "";
  width: 100%;
  height: 96vh;
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
}
@media only screen and (min-width: 920px) {
  body:before {
    height: 85vh;
    background-size: cover;
    opacity: 0.5;
  }
}
body.fiesp:before {
  background: url("/assets/images/fiesp.jpg");
}
@media only screen and (min-width: 920px) {
  body.fiesp:before {
    background: url("/assets/images/fiesp-desk.jpg");
  }
}
body.sesc:before {
  background: url("/assets/images/sesc.jpg");
}
@media only screen and (min-width: 920px) {
  body.sesc:before {
    background: url("/assets/images/sesc-desk.jpg");
    background-size: cover;
  }
}
body.japanHouse:before {
  background: url("/assets/images/japan.jpg");
}
@media only screen and (min-width: 920px) {
  body.japanHouse:before {
    background: url("/assets/images/japan.jpg");
    background-size: cover;
  }
}
body.IMS:before {
  background: url("/assets/images/ims.jpg");
}
@media only screen and (min-width: 920px) {
  body.IMS:before {
    background: url("/assets/images/ims-desktop.jpg");
    background-size: cover;
  }
}
.titleHolder {
  border: 1px solid rgba(255,255,255,0.5);
  padding: 40px 20px 80px 20px;
  margin-top: 130px;
  position: relative;
  margin-bottom: 15vh;
}
@media only screen and (min-width: 920px) {
  .titleHolder {
    margin-bottom: 20vh;
    padding: 100px 70px;
  }
}
.titleHolder h1 {
  color: #fff;
  font-size: 30px;
  line-height: 46px;
  font-weight: 400;
  font-family: Montserrat;
  margin: 0;
}
@media only screen and (min-width: 920px) {
  .titleHolder h1 {
    font-size: 60px;
    line-height: 100px;
    max-width: 60%;
  }
}
.titleHolder .date {
  color: #fff;
  font-weight: 100;
  font-size: 12px;
  position: absolute;
  bottom: -30px;
  right: 0;
}
.content-section.post {
  background-color: #fff;
  width: calc(100% - 25px);
  margin-left: 25px;
  font-family: Merriweather;
  line-height: 35px;
  font-size: 14px;
  color: #4a4a4a;
  font-weight: 100;
  padding: 60px 10px 60px 20px;
}
@media only screen and (min-width: 1024px) {
  .content-section.post {
    font-size: 16px;
    line-height: 46px;
    width: calc(100% - 150px);
    margin-left: 150px;
  }
}
.content-section.post .container {
  max-width: 650px;
}
.content-section.post .sub {
  font-family: Montserrat;
  font-size: 18px;
  line-height: 30px;
  margin-bottom: 70px;
}
@media only screen and (min-width: 920px) {
  .content-section.post .sub {
    font-size: 25px;
    line-height: 45px;
  }
}
.content-section.post p.cap::first-letter {
  font-size: 300%;
}
.content-section.post p.text {
  margin-bottom: 50px;
}
.content-section.post .post-image {
  margin: 0 auto 20px -60px;
  box-shadow: 7px 9px 20px 0px rgba(82,82,82,0.251);
  max-height: 500px;
  max-width: 120%;
}
.author {
  transform: translateY(40px) translateX(50px);
}
@media only screen and (max-width: 500px) {
  .author {
    max-width: 70%;
  }
}
@media only screen and (min-width: 920px) {
  .author {
    transform: translateY(50px);
  }
}
.author .container {
  width: 100%;
  max-width: 650px;
}
@media only screen and (min-width: 920px) {
  .author .container {
    max-width: 1000px;
  }
}
.author .profilePic {
  display: inline-block;
  width: 80px;
  height: 80px;
  border: 2px solid #fff;
  border-radius: 100%;
  padding: 8px;
}
@media only screen and (min-width: 920px) {
  .author .profilePic {
    width: 100px;
    height: 100px;
  }
}
.author .name {
  display: inline-block;
  color: #fff;
  vertical-align: top;
  margin-top: 12px;
  margin-left: 20px;
  transform: translateY(-10px);
}
.author .name:before {
  display: block;
  content: "Por";
}
.container {
  margin: 0 auto;
  max-width: 1280px;
  width: 85%;
}
.row:before {
  content: '';
  display: table;
}
.row:after {
  content: '';
  display: table;
  clear: both;
}
.col-1 {
  width: calc(99.9% * 1/12 - (30px - 30px * 1/12));
}
.col-1:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-1:last-child {
  margin-right: 0;
}
.col-1:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-1:nth-child(12n + 1) {
  clear: both;
}
.col-2 {
  width: calc(99.9% * 2/12 - (30px - 30px * 2/12));
}
.col-2:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-2:last-child {
  margin-right: 0;
}
.col-2:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-2:nth-child(12n + 1) {
  clear: both;
}
.col-3 {
  width: calc(99.9% * 3/12 - (30px - 30px * 3/12));
}
.col-3:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-3:last-child {
  margin-right: 0;
}
.col-3:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-3:nth-child(12n + 1) {
  clear: both;
}
.col-4 {
  width: calc(99.9% * 4/12 - (30px - 30px * 4/12));
}
.col-4:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-4:last-child {
  margin-right: 0;
}
.col-4:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-4:nth-child(12n + 1) {
  clear: both;
}
.col-5 {
  width: calc(99.9% * 5/12 - (30px - 30px * 5/12));
}
.col-5:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-5:last-child {
  margin-right: 0;
}
.col-5:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-5:nth-child(12n + 1) {
  clear: both;
}
.col-6 {
  width: calc(99.9% * 6/12 - (30px - 30px * 6/12));
}
.col-6:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-6:last-child {
  margin-right: 0;
}
.col-6:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-6:nth-child(12n + 1) {
  clear: both;
}
.col-7 {
  width: calc(99.9% * 7/12 - (30px - 30px * 7/12));
}
.col-7:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-7:last-child {
  margin-right: 0;
}
.col-7:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-7:nth-child(12n + 1) {
  clear: both;
}
.col-8 {
  width: calc(99.9% * 8/12 - (30px - 30px * 8/12));
}
.col-8:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-8:last-child {
  margin-right: 0;
}
.col-8:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-8:nth-child(12n + 1) {
  clear: both;
}
.col-9 {
  width: calc(99.9% * 9/12 - (30px - 30px * 9/12));
}
.col-9:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-9:last-child {
  margin-right: 0;
}
.col-9:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-9:nth-child(12n + 1) {
  clear: both;
}
.col-10 {
  width: calc(99.9% * 10/12 - (30px - 30px * 10/12));
}
.col-10:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-10:last-child {
  margin-right: 0;
}
.col-10:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-10:nth-child(12n + 1) {
  clear: both;
}
.col-11 {
  width: calc(99.9% * 11/12 - (30px - 30px * 11/12));
}
.col-11:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-11:last-child {
  margin-right: 0;
}
.col-11:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-11:nth-child(12n + 1) {
  clear: both;
}
.col-12 {
  width: calc(99.9% * 12/12 - (30px - 30px * 12/12));
}
.col-12:nth-child(1n) {
  float: left;
  margin-right: 30px;
  clear: none;
}
.col-12:last-child {
  margin-right: 0;
}
.col-12:nth-child(12n) {
  margin-right: 0;
  float: right;
}
.col-12:nth-child(12n + 1) {
  clear: both;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Rldi9zdHlsZXMvbWFpbi5zdHlsIiwiLi4vLi4vLi4vZGV2L3N0eWxlcy9jb25maWcvYWxpYXNlcy5zdHlsIiwiLi4vLi4vLi4vZGV2L3N0eWxlcy92ZW5kb3JzL25vcm1hbGl6ZS5zdHlsIiwiLi4vLi4vLi4vZGV2L3N0eWxlcy9iYXNlL2Jhc2Uuc3R5bCIsIi4uLy4uLy4uL2Rldi9zdHlsZXMvYmFzZS9oZWxwZXJzLnN0eWwiLCIuLi8uLi8uLi9kZXYvc3R5bGVzL2NvbXBvbmVudHMvaG9tZS5zdHlsIiwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3J1cHR1cmUvcnVwdHVyZS9pbmRleC5zdHlsIiwiLi4vLi4vLi4vZGV2L3N0eWxlcy9jb21wb25lbnRzL21lbnUuc3R5bCIsIi4uLy4uLy4uL2Rldi9zdHlsZXMvY29tcG9uZW50cy9wb3N0LnN0eWwiLCIuLi8uLi8uLi9kZXYvc3R5bGVzL2xheW91dHMvY29udGFpbmVyLnN0eWwiLCIuLi8uLi8uLi9kZXYvc3R5bGVzL2xheW91dHMvc2ltcGxlLWdyaWQuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQ0lBO0VBQ0MsSUFBSSxZQUFKO0VBQ0EsSUFBSSxVQUFKO0VBQ0EsSUFBSSxZQUFKOztBQ0dEO0VBQ0MsYUFBYSxXQUFiO0VBQ0Esc0JBQXNCLEtBQXRCO0VBQ0EsMEJBQTBCLEtBQTFCOztBQU9EO0VBQ0MsUUFBUSxFQUFSOztBQVVEO0FBQVE7QUFDTztBQUNTO0FBQ1k7QUFDUTtBQUNRO0FBQ1E7QUFDUTtBQUNNO0FBQ0s7QUFDUztFQUV2RixTQUFTLE1BQVQ7O0FBUUQ7QUFBTTtBQUNRO0FBQ1U7RUFFdkIsU0FBUyxhQUFUO0VBQ0EsZ0JBQWdCLFNBQWhCOztBQU9EO0VBQ0MsU0FBUyxLQUFUO0VBQ0EsUUFBUSxFQUFSOztBQVFEO0FBQVM7RUFFUixTQUFTLEtBQVQ7O0FBV0Q7RUFDQyxZQUFZLFlBQVo7RUFDQSxpQkFBaUIsS0FBakI7O0FBVUQ7RUFD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LFdBQVUsS0FBVjs7QUFFUjtFQUNJLFdBQXlCLGtDQUF6Qjs7QUZpQ087QUFBQTtJRS9CSCxXQUFVLElBQVY7OztBRitCRztBQUFBO0lFN0JILFdBQXlCLGlCQUF6Qjs7O0FBQ0o7RUFDSSxPQUFNLEtBQU47RUFDQSxXQUFVLE1BQVY7O0FGMEJHO0FBQUE7SUV4QkMsV0FBVSxPQUFWOzs7QUFDUjtFQUNJLFNBQVEsYUFBUjtFQUNBLE9BQU0sS0FBTjtFQUNBLFFBQU8sS0FBUDtFQUNBLFFBQU8sZUFBUDtFQUNBLGVBQWMsS0FBZDtFQUNBLFNBQVEsSUFBUjs7QUZpQkc7QUFBQTtJRWZDLE9BQU0sTUFBTjtJQUNBLFFBQU8sTUFBUDs7O0FBQ1I7RUFDSSxTQUFRLGFBQVI7RUFDQSxPQUFNLEtBQU47RUFDQSxnQkFBZSxJQUFmO0VBQ0EsWUFBVyxLQUFYO0VBQ0EsYUFBWSxLQUFaO0VBQ0EsV0FBMEIsa0JBQTFCOztBQUNBO0VBQ0ksU0FBUSxNQUFSO0VBQ0EsU0FBUSxNQUFSOztBQ3RJWDtFQUNDLFFBQVEsT0FBUjtFQUNBLFdBQVcsT0FBWDtFQUNBLE9BQU8sSUFBUDs7QUNKRjtFQUNDLGNBQWMsU0FBZDs7QUFJQTtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsS0FBYjs7QUFERDtFQUNDLGFBQWEsTUFBYjs7QUFERDtFQUNDLGFBQWEsTUFBYjs7QUFERDtFQUNDLGFBQWEsTUFBYiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIFNpbXBsZSBCb2lsZXJwbGF0ZVxuKiBodHRwczovL2dpdGh1Yi5jb20vbWpuci9TaW1wbGUtQm9pbGVycGxhdGVcbiogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQXV0aG9yOiBNaWxzb24gSsO6bmlvclxuKiBVUkw6IGh0dHBzOi8vZ2l0aHViLmNvbS9tam5yXG4qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIFByb2plY3QgTmFtZVxuKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKi9cblxuLy8gQ29uZmlnXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AcmVxdWlyZSAnY29uZmlnLyonO1xuXG4vLyBWZW5kb3JzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AcmVxdWlyZSAndmVuZG9ycy8qJztcblxuLy8gQmFzZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuQHJlcXVpcmUgJ2Jhc2UvKic7XG5cbi8vIENvbXBvbmVudHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkByZXF1aXJlICdjb21wb25lbnRzLyonO1xuXG4vLyBMYXlvdXRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AcmVxdWlyZSAnbGF5b3V0cy8qJztcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEFsaWFzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBhbGlhcyB7XG5cdGZmOiBmb250LWZhbWlseTtcblx0ZnM6IGZvbnQtc2l6ZTtcblx0Znc6IGZvbnQtd2VpZ2h0O1xufVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gTm9ybWFsaXplIC0gVmVuZG9yXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICogMS4gU2V0IGRlZmF1bHQgZm9udCBmYW1pbHkgdG8gc2Fucy1zZXJpZi5cbiAqIDIuIFByZXZlbnQgaU9TIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlLCB3aXRob3V0IGRpc2FibGluZ1xuICogICAgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuXHRmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLy8gMVxuXHQtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLy8gMlxuXHQtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIDJcbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG5cdG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuXHQgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuXHRkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jazsgLy8gMVxuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8vIDJcbn1cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcblx0ZGlzcGxheTogbm9uZTtcblx0aGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuXHRkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuXHQgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmEge1xuXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgLy8gMVxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG5cdCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzksIFNhZmFyaSA1LCBhbmQgQ2hyb21lLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcblx0Ym9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmkgNSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSA1IGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG5cdGJhY2tncm91bmQ6ICNmZjA7XG5cdGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcblx0Zm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG5cdGZvbnQtc2l6ZTogNzUlO1xuXHRsaW5lLWhlaWdodDogMDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG5cdHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuXHRib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcblx0ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkuXG4gKi9cblxuaW1nIHtcblx0Ym9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgZGlzcGxheWVkIG9kZGx5IGluIElFIDkuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuXHRvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBMaXN0XG5cdCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG51bCxcbm9sLFxuZGwge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG59XG5cbmxpIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuXHQgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuXHRib3gtc2l6aW5nOiBjb250ZW50LWJveDtcblx0aGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG5cdG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG5cdGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcblx0Zm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG5cdCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSA1LCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG5cdGNvbG9yOiBpbmhlcml0OyAvLyAxXG5cdGZvbnQ6IGluaGVyaXQ7IC8vIDJcblx0bWFyZ2luOiAwOyAvLyAzXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuYnV0dG9uIHtcblx0b3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOCssIGFuZCBPcGVyYVxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG5cdHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvLyAxXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8vIDJcblx0LW1vei1hcHBlYXJhbmNlOiBidXR0b247IC8vIDJcblx0Y3Vyc29yOiBwb2ludGVyOyAvLyAzXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuXHRjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcblx0Ym9yZGVyOiAwO1xuXHRwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcblx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8vIDFcblx0cGFkZGluZzogMDsgLy8gMlxufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcblx0aGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSA1IGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSA1IGFuZCBDaHJvbWVcbiAqICAgIChpbmNsdWRlIGAtbW96YCB0byBmdXR1cmUtcHJvb2YpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuXHQtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLy8gMVxuXHQtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLy8gMVxuXHRib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG5cdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcblx0LW1vei1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG5cdGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG5cdG1hcmdpbjogMCAycHg7XG5cdHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcblx0Ym9yZGVyOiAwOyAvLyAxXG5cdHBhZGRpbmc6IDA7IC8vIDJcbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LlxuICovXG5cbnRleHRhcmVhIHtcblx0b3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuXHRmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG5cdCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcblx0cGFkZGluZzogMDtcbn1cbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEJhc2Vcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwsXG5ib2R5IHtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcblx0Y29sb3I6IGNvbnRlbnQtY29sb3I7XG5cdGZvbnQtZmFtaWx5IE1vbnRzZXJyYXRcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcblx0Y29sb3I6IGhlYWRpbmctY29sb3I7XG59XG5cbmEge1xuXHRjb2xvcjogbGluay1jb2xvcjtcbn1cblxuaW1nIHtcblx0bWF4LXdpZHRoOiAxMDAlO1xufVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSGVscGVyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kX3VubWFyZ2luIHtcblx0bWFyZ2luOiAwICFpbXBvcnRhbnQ7XG59XG5cbiRfYWxpZ24tY2VudGVyIHtcblx0dGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbiRfYWxpZ24tbGVmdCB7XG5cdHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDtcbn1cblxuJF9hbGlnbi1yaWdodCB7XG5cdHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbiRfdG8tcmlnaHQge1xuXHRmbG9hdDogcmlnaHQgIWltcG9ydGFudDtcbn1cblxuJF90by1sZWZ0IHtcblx0ZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcbn1cbiIsImJvZHkuaG9tZVxuICAgIGJhY2tncm91bmQtaW1hZ2UgdXJsKC9hc3NldHMvaW1hZ2VzL2hvbWUuanBnKVxuICAgICthYm92ZSg5MjBweClcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZSB1cmwoL2Fzc2V0cy9pbWFnZXMvcGF1bGlzdGEtZGVzay5qcGcpXG4gICAgYmFja2dyb3VuZC1zaXplIGNvdmVyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQgbm8tcmVwZWF0XG4gICAgaGVpZ2h0IDEwMHZoXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbiBib3R0b20gcmlnaHRcbiAgICBcbiAgICBoZWFkZXIgXG4gICAgICAgIGRpc3BsYXkgbm9uZVxuXG4gICAgLmNvbnRhaW5lclxuICAgICAgICBtYXgtd2lkdGggbm9uZVxuXG4gICAgLmxvZ29cbiAgICAgICAgbWFyZ2luLXRvcCAxMHB4XG4gICAgICAgIG1hcmdpbi1sZWZ0IC0xMHB4XG5cbiAgICBzcGFuLmVkaXRpb24gXG4gICAgICAgIGNvbG9yICNmZmZmZmYgICBcbiAgICAgICAgdGV4dC1hbGlnbiByaWdodFxuICAgICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVZKC0yMHB4KVxuICAgICAgICBmb250LXdlaWdodCBsaWdodGVyXG4gICAgICAgIGZvbnQtc2l6ZSBjYWxjKDEycHggKyAxICogKCgxMDB2dyAtIDMyMHB4KSAvIDY4MCkpXG4gICAgICAgIFxuICAgIHNwYW4uZGF0ZVxuICAgICAgICBjb2xvciAjZmZmZmZmXG4gICAgICAgIGZvbnQtd2VpZ2h0IGxpZ2h0ZXJcbiAgICAgICAgdGV4dC1hbGlnbiBsZWZ0XG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIGJvdHRvbSAxMDBweFxuICAgICAgICBtYXJnaW4tbGVmdCAtMTBweFxuICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgIGxlZnQgMzBweFxuICAgICAgICBmb250LXNpemUgY2FsYygxMnB4ICsgMSAqICgoMTAwdncgLSAzMjBweCkgLyA2ODApKVxuICAgICAgICArYWJvdmUoOTIwcHgpXG4gICAgICAgICAgICBsZWZ0IGF1dG9cbiAgICAgICAgICAgIHdpZHRoIGF1dG9cblxuICAgIGgyXG4gICAgICAgIGNvbG9yICNmZmZmZmZcbiAgICAgICAgZm9udC1mYW1pbHkgTWVycml3ZWF0aGVyXG4gICAgICAgIGZvbnQtc2l6ZSBjYWxjKDEzcHggKyAzICogKCgxMDB2dyAtIDMyMHB4KSAvIDY4MCkpXG4gICAgICAgIGZvbnQtd2VpZ2h0IGxpZ2h0ZXJcbiAgICAgICAgbWF4LXdpZHRoIDY1JVxuICAgICAgICBsaW5lLWhlaWdodCAyNnB4XG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIHRvcCAxNSVcbiAgICAgICAgbWFyZ2luLWxlZnQgLTEwcHhcbiAgICAgICAgK2Fib3ZlKDkyMHB4KVxuICAgICAgICAgICAgbWF4LXdpZHRoIDIwJVxuICAgICAgICAgICAgbGluZS1oZWlnaHQgMTgwJVxuICAgICAgICAgICAgYm90dG9tIDMwJVxuICAgICAgICAgICAgdG9wIGF1dG9cbiAgICAgICAgXG5cbiAgICBcbiAgICBoMVxuICAgICAgICB0ZXh0LXRyYW5zZm9ybSB1cHBlcmNhc2VcbiAgICAgICAgY29sb3IgI2ZmZmZmZlxuICAgICAgICBmb250LXdlaWdodCBib2xkZXJcbiAgICAgICAgdHJhbnNmb3JtIHJvdGF0ZSgtOTBkZWcpXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW4gYm90dG9tIHJpZ2h0IFxuICAgICAgICBmb250LXNpemUgY2FsYyg0MHB4ICsgMTUgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gNjgwKSlcbiAgICAgICAgbGV0dGVyLXNwYWNpbmcgMjJweFxuICAgICAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgICAgICByaWdodCAwXG4gICAgICAgIG1hcmdpbiAwXG4gICAgICAgIG1hcmdpbi10b3AgLTY0cHhcbiAgICAgICAgdG9wIGNhbGMoNTAlIC0gMjd2aClcbiAgICAgICAgbWFyZ2luLXJpZ2h0IDQuNSVcbiAgICAgICAgK2Fib3ZlKDkyMHB4KVxuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmcgNDBweFxuICAgICAgICAgICAgbWFyZ2luLXRvcCAtMTUwcHhcblxuXG4gICAgICAgICY6YmVmb3JlXG4gICAgICAgICAgICBkaXNwbGF5IGJsb2NrICBcbiAgICAgICAgICAgIGNvbnRlbnQgXCJBVkVOSURBXCJcbiAgICAgICAgICAgIGZvbnQtc2l6ZSAyMHB4XG4gICAgICAgICAgICBvcGFjaXR5IC4zXG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZyAxMHB4XG4gICAgICAgICAgICB0ZXh0LWFsaWduIHJpZ2h0IFxuICAgICAgICAgICAgcGFkZGluZy1yaWdodCAyMHB4XG5cbiAgICBcbiAgICBcbiAgICAudGl0bGVJbWFnZVxuICAgICAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgICAgICB3aWR0aCA4MCVcbiAgICAgICAgaGVpZ2h0IDg1dmhcbiAgICAgICAgbGVmdCAxMiVcbiAgICAgICAgdG9wIDcuNSVcbiAgICAgICAgbWFyZ2luIDBcbiAgICBcbiAgICAubGVpYVxuICAgICAgICBjb2xvciAjZmZmZmZmXG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIGJvdHRvbSAwXG4gICAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICAgIGZvbnQtd2VpZ2h0IGJvbGRcbiAgICAgICAgdGV4dC10cmFuc2Zvcm0gdXBwZXJjYXNlXG4gICAgICAgIGJvdHRvbSAwcHggICAgICAgXG4gICAgICAgIHdpZHRoIDEwMCUgXG4gICAgICAgIGxlZnQgMFxuICAgICAgICBwYWRkaW5nLXRvcCAxMDBweFxuICAgICAgICBwYWRkaW5nLWJvdHRvbSAyMHB4XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtMTgwZGVnLCByZ2JhKDM3LDM3LDM3LDApIDAsICMyNzI2MjMgMTAwJSk7XG4gICAgICAgIHNwYW4gXG4gICAgICAgICAgICBmb250LXdlaWdodCBsaWdodGVyXG4gICAgICAgICAgICBmb250LXNpemUgMjVweFxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0IDEwcHgiLCJiYXNlLWZvbnQtc2l6ZSA/PSAxNnB4XG5yYXN0ZXJpc2UtbWVkaWEtcXVlcmllcyA/PSBmYWxzZVxuXG5ydXB0dXJlID0ge1xuICByYXN0ZXJpc2UtbWVkaWEtcXVlcmllczogcmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXNcbiAgbW9iaWxlLWN1dG9mZjogNDAwcHhcbiAgZGVza3RvcC1jdXRvZmY6IDEwNTBweFxuICBoZC1jdXRvZmY6IDE4MDBweFxuICBlbmFibGUtZW0tYnJlYWtwb2ludHM6IGZhbHNlXG4gIGJhc2UtZm9udC1zaXplOiBiYXNlLWZvbnQtc2l6ZVxuICBhbnRpLW92ZXJsYXA6IGZhbHNlXG4gIGRlbnNpdHktcXVlcmllczogJ2RwcHgnICd3ZWJraXQnICdtb3onICdkcGknXG4gIHJldGluYS1kZW5zaXR5OiAxLjVcbiAgdXNlLWRldmljZS13aWR0aDogZmFsc2Vcbn1cbnJ1cHR1cmUuc2NhbGUgPSAwIChydXB0dXJlLm1vYmlsZS1jdXRvZmYpIDYwMHB4IDgwMHB4IChydXB0dXJlLmRlc2t0b3AtY3V0b2ZmKSAocnVwdHVyZS5oZC1jdXRvZmYpXG5ydXB0dXJlLnNjYWxlLW5hbWVzID0gJ3hzJyAncycgJ20nICdsJyAneGwnICdoZCdcblxuLWlzLXN0cmluZyh2YWwpXG4gIGlmIHR5cGVvZih2YWwpIGlzIG5vdCAndW5pdCdcbiAgICBpZiB2YWwgaXMgYSAnc3RyaW5nJyBvciB2YWwgaXMgYSAnaWRlbnQnXG4gICAgICB0cnVlXG4gICAgZWxzZVxuICAgICAgZmFsc2VcbiAgZWxzZVxuICAgIGZhbHNlXG5cbi1nZXQtc2NhbGUtbnVtYmVyKHNjYWxlLW5hbWUpXG4gIGZvciBsaXN0LWl0ZW0sIGkgaW4gcnVwdHVyZS5zY2FsZS1uYW1lc1xuICAgIGlmIGxpc3QtaXRlbSBpcyBzY2FsZS1uYW1lXG4gICAgICByZXR1cm4gaSArIDFcbiAgcmV0dXJuIGZhbHNlXG5cbi1jb252ZXJ0LXRvKHRvLXVuaXQsIHZhbHVlLCBjb250ZXh0ID0gcnVwdHVyZS5iYXNlLWZvbnQtc2l6ZSlcbiAgZnJvbS11bml0ID0gdW5pdCh2YWx1ZSlcbiAgcmV0dXJuIHZhbHVlIGlmIHRvLXVuaXQgaXMgZnJvbS11bml0XG4gIGlmIHRvLXVuaXQgaW4gKCdlbScgJ3JlbScpXG4gICAgcmV0dXJuIHZhbHVlIGlmIGZyb20tdW5pdCBpbiAoJ2VtJyAncmVtJylcbiAgICByZXR1cm4gdW5pdCgodmFsdWUgLyBjb250ZXh0KSwgdG8tdW5pdClcbiAgaWYgdG8tdW5pdCBpcyAncHgnXG4gICAgcmV0dXJuIHVuaXQoKHZhbHVlICogY29udGV4dCksICdweCcpXG5cbi1vbi1zY2FsZShuKVxuICByZXR1cm4gdW5pdChuKSBpcyAnJ1xuXG4tbGFyZ2VyLXRoYW4tc2NhbGUobilcbiAgcmV0dXJuIChuID4gKGxlbmd0aChydXB0dXJlLnNjYWxlKSAtIDEpKSBhbmQgLW9uLXNjYWxlKG4pXG5cbi1pcy16ZXJvKG4pXG4gIHJldHVybiBuIGlzIDBcblxuLW92ZXJsYXAtc2hpZnQoYW50aS1vdmVybGFwLCBuKVxuICBzaGlmdC11bml0ID0gdW5pdChuKVxuICBhbnRpLW92ZXJsYXAgPSAwcHggdW5sZXNzIGFudGktb3ZlcmxhcFxuICBhbnRpLW92ZXJsYXAgPSAxcHggaWYgYW50aS1vdmVybGFwIGlzIHRydWVcbiAgaWYgbGVuZ3RoKGFudGktb3ZlcmxhcCkgaXMgMVxuICAgIHJldHVybiAtY29udmVydC10byhzaGlmdC11bml0LCBhbnRpLW92ZXJsYXApXG4gIGZvciB2YWwgaW4gYW50aS1vdmVybGFwXG4gICAgcmV0dXJuIHZhbCBpZiB1bml0KHZhbCkgaXMgc2hpZnQtdW5pdFxuXG4tYWRqdXN0LW92ZXJsYXAoYW50aS1vdmVybGFwLCBuLCBzaWRlID0gJ21pbicpXG4gIC1zaGlmdCA9IC1vdmVybGFwLXNoaWZ0KGFudGktb3ZlcmxhcCwgbilcbiAgaWYgKHNpZGUgaXMgJ21pbicgYW5kIC1zaGlmdCA+IDApIG9yIChzaWRlIGlzICdtYXgnIGFuZCAtc2hpZnQgPCAwKVxuICAgIG4gPSBuICsgLXNoaWZ0XG4gIHJldHVybiBuXG5cbi1pcy1wb3NpdGl2ZShuKVxuICByZXR1cm4gbiA+PSAwXG5cbi1kZW5zaXR5LXF1ZXJpZXMoZGVuc2l0eSlcbiAgaWYgdHlwZW9mKGRlbnNpdHkpIGlzIG5vdCAndW5pdCdcbiAgICBpZiBub3QgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgICAgZGVuc2l0eSA9ICclcycgJSBkZW5zaXR5XG4gIGRlbnNpdHkgPSBydXB0dXJlLnJldGluYS1kZW5zaXR5IGlmIGRlbnNpdHkgaXMgJ3JldGluYSdcbiAgcXVlcmllcyA9ICgpXG4gIGZvciBxdWVyeSBpbiBydXB0dXJlLmRlbnNpdHktcXVlcmllc1xuICAgIGlmIHF1ZXJ5IGlzICd3ZWJraXQnXG4gICAgICBwdXNoKHF1ZXJpZXMsICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAlcyknICUgKGRlbnNpdHkpKVxuICAgIGVsc2UgaWYgcXVlcnkgaXMgJ21veidcbiAgICAgIHB1c2gocXVlcmllcywgJyhtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86ICVzKScgJSAoZGVuc2l0eSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAnbydcbiAgICAgIHB1c2gocXVlcmllcywgJygtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAlcy8xKScgJSAoZGVuc2l0eSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAncmF0aW8nXG4gICAgICBwdXNoKHF1ZXJpZXMsICcobWluLWRldmljZS1waXhlbC1yYXRpbzogJXMpJyAlIChkZW5zaXR5KSlcbiAgICBlbHNlIGlmIHF1ZXJ5IGlzICdkcGknXG4gICAgICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgICAgIGRlbnNpdHk9Y29udmVydChkZW5zaXR5KVxuICAgICAgcHVzaChxdWVyaWVzLCAnKG1pbi1yZXNvbHV0aW9uOiAlc2RwaSknICUgKHJvdW5kKGRlbnNpdHkgKiA5NiwgMSkpKVxuICAgIGVsc2UgaWYgcXVlcnkgaXMgJ2RwcHgnXG4gICAgICBwdXNoKHF1ZXJpZXMsICcobWluLXJlc29sdXRpb246ICVzZHBweCknICUgKGRlbnNpdHkpKVxuICByZXR1cm4gcXVlcmllc1xuXG5jcmVhdGUtZmFsbGJhY2stY2xhc3Moc2VsZWN0ZWQsIGNsYXNzKVxuICAveycnICsgY2xhc3MgKyAnICcgKyBzZWxlY3RlZH1cbiAgICB7YmxvY2t9XG5cbi8vICtiZXR3ZWVuKG1pbiwgbWF4KVxuLy8gdXNhZ2UgKHNjYWxlIGNhbiBiZSBtaXhlZCB3aXRoIGN1c3RvbSB2YWx1ZXMpOlxuLy8gICAtICtiZXR3ZWVuKDEsIDMpIHNjYWxlOnNjYWxlXG4vLyAgIC0gK2JldHdlZW4oMCwgMykgMCB3aWR0aDpzY2FsZVxuLy8gICAtICtiZXR3ZWVuKDIwMHB4LCA1MDBweCkgY3VzdG9tOmN1c3RvbVxuLy8gICAtICtiZXR3ZWVuKDAsIDMwMHB4KSAwIHdpZHRoOmN1c3RvbVxuLy8gICAtICtiZXR3ZWVuKDEsIDMwMHB4KSBzY2FsZTpjdXN0b21cbi8vICAgLSArYmV0d2VlbigyMDBweCwgNCkgY3VzdG9tOnNjYWxlXG5cbmJldHdlZW4obWluLCBtYXgsIGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIHNlbGVjdGVkID0gc2VsZWN0b3IoKVxuXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgaWYgLWlzLXN0cmluZyhtaW4pXG4gICAgbWluID0gLWdldC1zY2FsZS1udW1iZXIobWluKVxuICBpZiAtaXMtc3RyaW5nKG1heClcbiAgICBtYXggPSAtZ2V0LXNjYWxlLW51bWJlcihtYXgpXG5cbiAgLW1pbiA9IHJ1cHR1cmUuc2NhbGVbbWluIC0gMV0gdW5sZXNzIC1pcy16ZXJvKG1pbikgb3IgKG5vdCAtb24tc2NhbGUobWluKSlcbiAgLW1heCA9IHJ1cHR1cmUuc2NhbGVbbWF4XSB1bmxlc3Mgbm90IC1vbi1zY2FsZShtYXgpXG4gIC1taW4gPz0gbWluXG4gIC1tYXggPz0gbWF4XG5cbiAgaWYgKHJ1cHR1cmUucmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXMpXG4gICAgaWYgbm90IChkZW5zaXR5IG9yIC1tYXggb3Igb3JpZW50YXRpb24pXG4gICAgICB7YmxvY2t9XG4gIGVsc2VcbiAgICBjb25kaXRpb24gPSAnb25seSBzY3JlZW4nXG4gICAgdXNlLWRldmljZS13aWR0aCA9IHVzZS1kZXZpY2Utd2lkdGggPyAnZGV2aWNlLScgOiAnJ1xuICAgIHVubGVzcyAtbWluIGlzIDBcbiAgICAgIC1taW4gPSAtY29udmVydC10bygnZW0nLCAtbWluKSBpZiBydXB0dXJlLmVuYWJsZS1lbS1icmVha3BvaW50c1xuICAgICAgLW1pbiA9IC1hZGp1c3Qtb3ZlcmxhcChhbnRpLW92ZXJsYXAsIC1taW4sIHNpZGU6ICdtaW4nKVxuICAgICAgY29uZGl0aW9uID0gY29uZGl0aW9uICsgJyBhbmQgKG1pbi0nICsgdXNlLWRldmljZS13aWR0aCArICd3aWR0aDogJXMpJyAlICgtbWluKVxuICAgIHVubGVzcyAtbGFyZ2VyLXRoYW4tc2NhbGUobWF4KVxuICAgICAgLW1heCA9IC1jb252ZXJ0LXRvKCdlbScsIC1tYXgpIGlmIHJ1cHR1cmUuZW5hYmxlLWVtLWJyZWFrcG9pbnRzXG4gICAgICAtbWF4ID0gLWFkanVzdC1vdmVybGFwKGFudGktb3ZlcmxhcCwgLW1heCwgc2lkZTogJ21heCcpXG4gICAgICBjb25kaXRpb24gPSBjb25kaXRpb24gKyAnIGFuZCAobWF4LScgKyB1c2UtZGV2aWNlLXdpZHRoICsgJ3dpZHRoOiAlcyknICUgKC1tYXgpXG4gICAgaWYgb3JpZW50YXRpb25cbiAgICAgIGNvbmRpdGlvbiA9IGNvbmRpdGlvbiArICcgYW5kIChvcmllbnRhdGlvbjogJXMpJyAlIChvcmllbnRhdGlvbilcbiAgICBpZiBkZW5zaXR5XG4gICAgICBjb25kaXRpb25zID0gKClcbiAgICAgIGZvciBxdWVyeSBpbiAtZGVuc2l0eS1xdWVyaWVzKGRlbnNpdHkpXG4gICAgICAgIHB1c2goY29uZGl0aW9ucywgY29uZGl0aW9uICsgJyBhbmQgJXMnICUgKHF1ZXJ5KSlcbiAgICAgIGNvbmRpdGlvbiA9IGpvaW4oJywgJywgY29uZGl0aW9ucylcbiAgICBAbWVkaWEgY29uZGl0aW9uXG4gICAgICB7YmxvY2t9XG4gIGlmIGZhbGxiYWNrLWNsYXNzXG4gICAgK2NyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICB7YmxvY2t9XG5cbmF0KHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICtiZXR3ZWVuKHNjYWxlLXBvaW50LCBzY2FsZS1wb2ludCwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MpXG4gICAge2Jsb2NrfVxuXG5mcm9tLXdpZHRoKHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICtiZXR3ZWVuKHNjYWxlLXBvaW50LCBsZW5ndGgocnVwdHVyZS5zY2FsZSksIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxuYWJvdmUgPSBmcm9tLXdpZHRoXG5cbnRvLXdpZHRoKHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICtiZXR3ZWVuKDEsIHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmJlbG93ID0gdG8td2lkdGhcblxubW9iaWxlKGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2JlbG93KHJ1cHR1cmUubW9iaWxlLWN1dG9mZiwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MpXG4gICAge2Jsb2NrfVxuXG50YWJsZXQoYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgaWYgLWlzLXN0cmluZyhvcmllbnRhdGlvbilcbiAgICBvcmllbnRhdGlvbiA9IGNvbnZlcnQob3JpZW50YXRpb24pXG4gIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICBkZW5zaXR5ID0gY29udmVydChkZW5zaXR5KVxuICArYmV0d2VlbihydXB0dXJlLm1vYmlsZS1jdXRvZmYsIHJ1cHR1cmUuZGVza3RvcC1jdXRvZmYsIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgsIGZhbGxiYWNrLWNsYXNzKVxuICAgIHtibG9ja31cblxuZGVza3RvcChhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBpZiAtaXMtc3RyaW5nKG9yaWVudGF0aW9uKVxuICAgIG9yaWVudGF0aW9uID0gY29udmVydChvcmllbnRhdGlvbilcbiAgaWYgLWlzLXN0cmluZyhkZW5zaXR5KVxuICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICthYm92ZShydXB0dXJlLmRlc2t0b3AtY3V0b2ZmLCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmhkKGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIGlmIC1pcy1zdHJpbmcob3JpZW50YXRpb24pXG4gICAgb3JpZW50YXRpb24gPSBjb252ZXJ0KG9yaWVudGF0aW9uKVxuICBpZiAtaXMtc3RyaW5nKGRlbnNpdHkpXG4gICAgZGVuc2l0eSA9IGNvbnZlcnQoZGVuc2l0eSlcbiAgK2Fib3ZlKHJ1cHR1cmUuaGQtY3V0b2ZmLCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmRlbnNpdHkoZGVuc2l0eSwgb3JpZW50YXRpb24gPSBudWxsLCBmYWxsYmFjay1jbGFzcyA9IG51bGwpXG4gIHNlbGVjdGVkID0gc2VsZWN0b3IoKVxuICBpZiBub3QgKHJ1cHR1cmUucmFzdGVyaXNlLW1lZGlhLXF1ZXJpZXMpXG4gICAgY29uZGl0aW9ucyA9ICgpXG4gICAgZm9yIHF1ZXJ5IGluIC1kZW5zaXR5LXF1ZXJpZXMoZGVuc2l0eSlcbiAgICAgIGNvbmRpdGlvbiA9ICdvbmx5IHNjcmVlbiBhbmQgJXMnICUgKHF1ZXJ5KVxuICAgICAgaWYgb3JpZW50YXRpb25cbiAgICAgICAgY29uZGl0aW9uID0gY29uZGl0aW9uICsgJyBhbmQgKG9yaWVudGF0aW9uOiAlcyknICUgKG9yaWVudGF0aW9uKVxuICAgICAgcHVzaChjb25kaXRpb25zLCBjb25kaXRpb24pXG4gICAgY29uZGl0aW9uID0gam9pbignLCAnLCBjb25kaXRpb25zKVxuICAgIEBtZWRpYSBjb25kaXRpb25cbiAgICAgIHtibG9ja31cbiAgICBpZiBmYWxsYmFjay1jbGFzc1xuICAgICAgK2NyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgIHtibG9ja31cblxucGl4ZWwtcmF0aW8gPSBkZW5zaXR5XG5cbnJldGluYShvcmllbnRhdGlvbiA9IG51bGwsIGZhbGxiYWNrLWNsYXNzID0gbnVsbClcbiAgK2RlbnNpdHkoJ3JldGluYScsIG9yaWVudGF0aW9uLCBmYWxsYmFjay1jbGFzcylcbiAgICB7YmxvY2t9XG5cbmxhbmRzY2FwZShkZW5zaXR5ID0gbnVsbCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBzZWxlY3RlZCA9IHNlbGVjdG9yKClcbiAgaWYgbm90IChydXB0dXJlLnJhc3RlcmlzZS1tZWRpYS1xdWVyaWVzKVxuICAgIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICAgaWYgZGVuc2l0eVxuICAgICAgK3BpeGVsLXJhdGlvKGRlbnNpdHksIG9yaWVudGF0aW9uOiBsYW5kc2NhcGUsIGZhbGxiYWNrLWNsYXNzKVxuICAgICAgICB7YmxvY2t9XG4gICAgZWxzZVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcbiAgICAgICAge2Jsb2NrfVxuICAgICAgaWYgZmFsbGJhY2stY2xhc3NcbiAgICAgICAgK2NyZWF0ZS1mYWxsYmFjay1jbGFzcyhzZWxlY3RlZCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgICAge2Jsb2NrfVxuXG5wb3J0cmFpdChkZW5zaXR5ID0gbnVsbCwgZmFsbGJhY2stY2xhc3MgPSBudWxsKVxuICBzZWxlY3RlZCA9IHNlbGVjdG9yKClcbiAgaWYgbm90IChydXB0dXJlLnJhc3RlcmlzZS1tZWRpYS1xdWVyaWVzKVxuICAgIGlmIC1pcy1zdHJpbmcoZGVuc2l0eSlcbiAgICAgIGRlbnNpdHkgPSBjb252ZXJ0KGRlbnNpdHkpXG4gICAgaWYgZGVuc2l0eVxuICAgICAgK3BpeGVsLXJhdGlvKGRlbnNpdHksIG9yaWVudGF0aW9uOiBwb3J0cmFpdCwgZmFsbGJhY2stY2xhc3MpXG4gICAgICAgIHtibG9ja31cbiAgICBlbHNlXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpXG4gICAgICAgIHtibG9ja31cbiAgICAgIGlmIGZhbGxiYWNrLWNsYXNzXG4gICAgICAgICtjcmVhdGUtZmFsbGJhY2stY2xhc3Moc2VsZWN0ZWQsIGZhbGxiYWNrLWNsYXNzKVxuICAgICAgICAgIHtibG9ja31cbiIsImhlYWRlclxuICAgIG92ZXJmbG93LXggc2Nyb2xsXG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICAgIHBhZGRpbmcgMTVweCAwXG4gICAgYmFja2dyb3VuZC1jb2xvciAjMjgyOTMzXG4gICAgcG9zaXRpb24gZml4ZWRcbiAgICB0b3AgMFxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDE3cHggMCByZ2JhKDAsMCwwLDAuNTApO1xuICAgIHotaW5kZXggMTAwXG4gICAgd2lkdGggMTAwJVxuLm1lbnVcbiAgICBtaW4td2lkdGg6IDEwMDBweFxuICAgIGNvbG9yICNmZmZcbiAgICB3aWR0aCAxMDAlXG4gICAgZm9udC1mYW1pbHkgTW9udHNlcnJhdFxuICAgIGZvbnQtd2VpZ2h0OiAxMDBcbiAgICBsaSBcbiAgICAgICAgdmVydGljYWwtYWxpZ24gbWlkZGxlXG4gICAgICAgICYubG9nb1xuICAgICAgICAgICAgaW1nXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtIHRyYW5zbGF0ZVkoNXB4KVxuICAgICAgICAmOmZpcnN0LWNoaWxkXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0IDIwJVxuICAgICAgICAgICAgZm9udC1zaXplIDIwcHhcbiAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2sgXG4gICAgICAgIHBhZGRpbmcgMCAyNXB4XG4gICAgICAgICthYm92ZSgxMDI0cHgpXG4gICAgICAgICAgICBwYWRkaW5nIDAgNCVcbiAgICAgICAgICAgIGZvbnQtc2l6ZSAxNHB4IiwiYm9keVxuICAgIGJhY2tncm91bmQgIzM5MzkzOVxuICAgIGJhY2tncm91bmQtcmVwZWF0IG5vLXJlcGVhdFxuICAgIHBhZGRpbmctdG9wIDMwcHhcbiAgICAmOmJlZm9yZVxuICAgICAgICBkaXNwbGF5IGJsb2NrXG4gICAgICAgIGNvbnRlbnQgXCJcIlxuICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgIGhlaWdodCA5NnZoXG4gICAgICAgICthYm92ZSg5MjBweClcbiAgICAgICAgICAgIGhlaWdodCA4NXZoXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemUgY292ZXJcbiAgICAgICAgICAgIG9wYWNpdHkgLjVcbiAgICAgICAgcG9zaXRpb24gZml4ZWRcbiAgICAgICAgei1pbmRleCAtMVxuICAgICAgICB0b3AgMCBcbiAgICAgICAgbGVmdCAwXG4gICAgJi5maWVzcFxuICAgICAgICAmOmJlZm9yZVxuICAgICAgICAgICAgYmFja2dyb3VuZCB1cmwoL2Fzc2V0cy9pbWFnZXMvZmllc3AuanBnKSBcbiAgICAgICAgICAgICthYm92ZSg5MjBweClcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kIHVybCgvYXNzZXRzL2ltYWdlcy9maWVzcC1kZXNrLmpwZykgXG4gICAgJi5zZXNjXG4gICAgICAgICY6YmVmb3JlXG4gICAgICAgICAgICBiYWNrZ3JvdW5kIHVybCgvYXNzZXRzL2ltYWdlcy9zZXNjLmpwZykgXG4gICAgICAgICAgICArYWJvdmUoOTIwcHgpXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZCB1cmwoL2Fzc2V0cy9pbWFnZXMvc2VzYy1kZXNrLmpwZykgXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplIGNvdmVyXG5cbiAgICAmLmphcGFuSG91c2VcbiAgICAgICAgJjpiZWZvcmVcbiAgICAgICAgICAgIGJhY2tncm91bmQgdXJsKC9hc3NldHMvaW1hZ2VzL2phcGFuLmpwZykgXG4gICAgICAgICAgICArYWJvdmUoOTIwcHgpXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZCB1cmwoL2Fzc2V0cy9pbWFnZXMvamFwYW4uanBnKSBcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemUgY292ZXJcbiAgICAmLklNU1xuICAgICAgICAmOmJlZm9yZVxuICAgICAgICAgICAgYmFja2dyb3VuZCB1cmwoL2Fzc2V0cy9pbWFnZXMvaW1zLmpwZykgXG4gICAgICAgICAgICArYWJvdmUoOTIwcHgpXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZCB1cmwoL2Fzc2V0cy9pbWFnZXMvaW1zLWRlc2t0b3AuanBnKSBcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemUgY292ZXJcbiAgICAgICAgXG4gICAgXG4udGl0bGVIb2xkZXJcbiAgICBib3JkZXIgMXB4IHNvbGlkIHJnYmEoMjU1LDI1NSwyNTUsLjUpXG4gICAgcGFkZGluZyA0MHB4IDIwcHggODBweCAyMHB4XG4gICAgbWFyZ2luLXRvcCAxMzBweFxuICAgIHBvc2l0aW9uIHJlbGF0aXZlXG4gICAgbWFyZ2luLWJvdHRvbSAxNXZoXG4gICAgK2Fib3ZlKDkyMHB4KVxuICAgICAgICBtYXJnaW4tYm90dG9tIDIwdmhcbiAgICAgICAgcGFkZGluZyAxMDBweCA3MHB4XG4gICAgaDEgXG4gICAgICAgIGNvbG9yICNmZmZcbiAgICAgICAgZm9udC1zaXplIDMwcHhcbiAgICAgICAgbGluZS1oZWlnaHQgNDZweFxuICAgICAgICBmb250LXdlaWdodCA0MDBcbiAgICAgICAgZm9udC1mYW1pbHkgTW9udHNlcnJhdFxuICAgICAgICBtYXJnaW4gMFxuICAgICAgICArYWJvdmUoOTIwcHgpXG4gICAgICAgICAgICBmb250LXNpemUgNjBweFxuICAgICAgICAgICAgbGluZS1oZWlnaHQgMTAwcHhcbiAgICAgICAgICAgIG1heC13aWR0aCA2MCVcblxuICAgIC5kYXRlXG4gICAgICAgIGNvbG9yICNmZmZcbiAgICAgICAgZm9udC13ZWlnaHQgMTAwXG4gICAgICAgIGZvbnQtc2l6ZSAxMnB4XG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIGJvdHRvbSAtMzBweFxuICAgICAgICByaWdodCAwXG4gICAgXG5cbi5jb250ZW50LXNlY3Rpb24ucG9zdFxuICAgIGJhY2tncm91bmQtY29sb3IgI2ZmZlxuICAgIHdpZHRoIGNhbGMoMTAwJSAtIDI1cHgpIFxuICAgIG1hcmdpbi1sZWZ0IDI1cHhcbiAgICBmb250LWZhbWlseSBNZXJyaXdlYXRoZXJcbiAgICBsaW5lLWhlaWdodCAzNXB4XG4gICAgZm9udC1zaXplIDE0cHhcbiAgICBjb2xvciAjNEE0QTRBXG4gICAgZm9udC13ZWlnaHQgMTAwXG4gICAgcGFkZGluZyA2MHB4IDEwcHggNjBweCAgMjBweFxuICAgICthYm92ZSgxMDI0cHgpXG4gICAgICAgIGZvbnQtc2l6ZSAxNnB4XG4gICAgICAgIGxpbmUtaGVpZ2h0IDQ2cHhcbiAgICAgICAgd2lkdGggY2FsYygxMDAlIC0gMTUwcHgpIFxuICAgICAgICBtYXJnaW4tbGVmdCAxNTBweFxuICAgIC5jb250YWluZXJcbiAgICAgICAgbWF4LXdpZHRoIDY1MHB4XG4gICAgLnN1YlxuICAgICAgICBmb250LWZhbWlseSBNb250c2VycmF0XG4gICAgICAgIGZvbnQtc2l6ZSAxOHB4XG4gICAgICAgIGxpbmUtaGVpZ2h0IDMwcHhcbiAgICAgICAgbWFyZ2luLWJvdHRvbSA3MHB4XG4gICAgICAgICthYm92ZSg5MjBweClcbiAgICAgICAgICAgIGZvbnQtc2l6ZSAyNXB4XG4gICAgICAgICAgICBsaW5lLWhlaWdodCA0NXB4XG4gICAgcC5jYXA6OmZpcnN0LWxldHRlclxuICAgICAgICBmb250LXNpemUgMzAwJVxuXG4gICAgcC50ZXh0XG4gICAgICAgIG1hcmdpbi1ib3R0b20gNTBweFxuICAgIC5wb3N0LWltYWdlXG4gICAgICAgIG1hcmdpbiAwIGF1dG8gMjBweCAtNjBweFxuICAgICAgICBib3gtc2hhZG93IDdweCA5cHggMjBweCAwcHggIzUyNTI1MjQwXG4gICAgICAgIG1heC1oZWlnaHQgNTAwcHhcbiAgICAgICAgbWF4LXdpZHRoIDEyMCVcblxuLmF1dGhvclxuICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVZKDQwcHgpIHRyYW5zbGF0ZVgoNTBweClcbiAgICArYmVsb3coNTAwcHgpXG4gICAgICAgIG1heC13aWR0aCA3MCVcbiAgICArYWJvdmUoOTIwcHgpXG4gICAgICAgIHRyYW5zZm9ybSB0cmFuc2xhdGVZKDUwcHgpXG4gICAgLmNvbnRhaW5lciBcbiAgICAgICAgd2lkdGggMTAwJVxuICAgICAgICBtYXgtd2lkdGggNjUwcHhcbiAgICAgICAgK2Fib3ZlKDkyMHB4KVxuICAgICAgICAgICAgbWF4LXdpZHRoIDEwMDBweFxuICAgIC5wcm9maWxlUGljXG4gICAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgICAgIHdpZHRoIDgwcHhcbiAgICAgICAgaGVpZ2h0IDgwcHhcbiAgICAgICAgYm9yZGVyIDJweCBzb2xpZCAjZmZmZmZmXG4gICAgICAgIGJvcmRlci1yYWRpdXMgMTAwJVxuICAgICAgICBwYWRkaW5nIDhweFxuICAgICAgICArYWJvdmUoOTIwcHgpXG4gICAgICAgICAgICB3aWR0aCAxMDBweFxuICAgICAgICAgICAgaGVpZ2h0IDEwMHB4XG4gICAgLm5hbWVcbiAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICAgICAgY29sb3IgI2ZmZlxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbiB0b3BcbiAgICAgICAgbWFyZ2luLXRvcCAxMnB4XG4gICAgICAgIG1hcmdpbi1sZWZ0IDIwcHhcbiAgICAgICAgdHJhbnNmb3JtIHRyYW5zbGF0ZVkoLTEwcHgpXG4gICAgICAgICY6YmVmb3JlXG4gICAgICAgICAgICBkaXNwbGF5IGJsb2NrXG4gICAgICAgICAgICBjb250ZW50IFwiUG9yXCIiLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDb250YWluZXIgLSBMYXlvdXRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmNvbnRhaW5lciB7XG5cdCYge1xuXHRcdG1hcmdpbjogMCBhdXRvO1xuXHRcdG1heC13aWR0aDogY29udGFpbmVyLXdpZHRoO1xuXHRcdHdpZHRoOiA4NSU7XG5cdH1cbn1cbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFN1cGVyIEJhc2ljIEdyaWQgLSBMYXlvdXRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnJvdyB7XG5cdGxvc3QtdXRpbGl0eTogY2xlYXJmaXg7XG59XG5cbmZvciAkaSBpbiAoMS4uMTIpIHtcblx0LmNvbC17JGl9IHtcblx0XHRsb3N0LWNvbHVtbjogJGkvMTI7XG5cdH1cbn1cbiJdfQ== */